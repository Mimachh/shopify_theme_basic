<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />

<script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js" defer></script>


<style>
  .swiper-pagination {
    color: black;
    bottom: 0 !important;
  }
  .swiper-pagination-bullet-active {
    background: black !important;
  }
  .swiper-button-prev,
  .swiper-button-next {
    color: black;
    top: auto !important;
    height: 20px;
  }
  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 20px;
  }
  @media(min-width: 768px) {
    .swiper-button-prev,
    .swiper-button-next {
      color: black;
      top: auto !important;
      height: 10px;
    }
    .swiper-button-prev::after,
    .swiper-button-next::after {
      font-size: 30px;
    }
  }
  .product--information {
    height: fit-content;
  }
</style>
<script src="{{ 'product-model.js' | asset_url }}" defer></script>
<div x-data="{ productModalOpen: false }">

  {% assign selected_variant = product.selected_or_first_available_variant %}


  <div class="max-w-6xl mx-auto my-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
      <div class="product--medias">
        {% comment %} <div
        class="hidden md:block">
        {% for media in product.media %}
        <div
        class="h-100 overflow-hidden p-2">
        {% render 'product-media', media: media %}
        </div>
        {% endfor %}
        </div> {% endcomment %}
        <div class="">
          <div class="swiper h-94 md:h-120">
            <div class="swiper-wrapper ">
              {% for media in product.media %}

                <div class="swiper-slide">
                  <div class="h-80 md:h-110 overflow-hidden p-2 ">
                    {% render 'product-media', media: media %}
                  </div>
                </div>
              {% endfor %}
            </div>
            <div class="swiper-pagination"></div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
          </div>
        </div>
      </div>
      <div class="product--information sticky top-5 p-2">
        {% form 'product', product, id: "product-form", novalidate: 'novalidate' %}
          <input
            type="hidden"
            name="id"
            value="{{ selected_variant.id }}">

          {% for block in section.blocks %}
            {% case block.type %}
              {% when "vendor" %}
              <div class="my-3">
                <span class="text-xs text-metal">{{ product.vendor }}</span>
              </div>
              {% when "title" %}
              <div class="my-3">
                <span class="text-3xl text-dark">{{ product.title }}</span>
              </div>
              {% when "price" %}
              <div class="my-3" id="price-{{ section.id }}">
                {% assign product_price = selected_variant %}
                <span class="text-base text-danger line-through">{{ product_price.compare_at_price | money_with_currency }}</span>
                <span class="text-lg text-metal font-bold">{{ product_price.price | money_with_currency }}</span>
                {% if product_price.price < product_price.compare_at_price %}
                  <span class="px-5 py-1 text-sm font-bold bg-danger rounded-full text-light mx-4">Sale</span>
                {% endif %}
              </div>

              {% when "variant_selector" %}
              <div class="my-3">
                {% unless product.has_only_default_variant %}
                  <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

                      <div class="my-2">
                        <select
                          name="options[{{ option.name | escape }}]"
                          id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="w-full border border-black py-3 px-3 rounded-md">
                          {% for value in option.values %}
                            <option {% if option.selected_value == value %}selected="selected"{% endif %}value="{{ value | escape }}">{{ value }}</option>
                          {% endfor %}
                        </select>
                      </div>
                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                    {% endfor %}
                  </variant-selector>
                {% endunless %}
              </div>

              {% when "quantity" %}
              <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                  <input
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    value="1"
                    min="1"
                    class="w-full border border-black py-3 px-3 rounded-md">
                </div>
              </div>

              {% when "description" %}

              <div class="my-3">
                <p class="text-metal">{{ product.description }}</p>
              </div>

              {% when "checkout_buttons" %}
              <div class="my-3">
                <div class="w-full h-fit rounded-2xl bg-primary border border-dark group">
                  <button
                    type="submit"
                    name="add"
                    class="w-full px-6 py-4 bg-dark text-light rounded-2xl hoverTranslate transitionAll"
                    {% if selected_variant.available == false %}disabled{% endif %}>

                    {% if selected_variant.available == false %}
                      Sold out
                    {% else %}
                      Add to cart
                    {% endif %}
                  </button>
                </div>
              </div>
          {% else %}

            {% endcase %}
          {% endfor %}

        {% endform %}
      </div>
    </div>
  </div>

  <div id="productModelModal">
    <div x-show="productModalOpen" class="w-full h-full z-50 items-center fixed inset-0">
      <div class="relative w-full h-full bg-light">
        <div class="relative">
          <div class="flex justify-between items-start p-5 border-b">
            <h2 class="text-xl font-bold text-metal">3D Model Preview</h2>
            <button x-on:click="productModalOpen = false" class="text-metal bg-transparent transitionAll hover:text-tahiti rounded text-sm p-2 ml-auto inline-flex items-center">
              {% render 'icon-close' %}
            </button>
          </div>

          <div id="body" class="block relative"></div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener("change", this.onVariantChange);
    }

    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();

      if (this.currentVariant) {
        this.updateUrl();
        this.updateFormID();
        this.updatePrice();
      }
    }

    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options.map((option, index) => {
          return this.options[index] === option;
        }).includes(false);

        if (findings) 
          return variant;
        



      });

    }

    updateUrl() {
      if (!this.currentVariant) 
        return;
      



      window.history.replaceState({}, '', `${
        this.dataset.url
      }?=${
        this.currentVariant.id
      }`)
    }

    updateFormID() {
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${
        this.dataset.url
      }?variant=${
        this.currentVariant.id
      }&section_id=${
        this.dataset.section
      }`).then((response) => response.text()).then((responseText) => {
        const id = `price-${
          this.dataset.section
        }`
        const html = new DOMParser().parseFromString(responseText, 'text/html');

        const oldPrice = document.getElementById(id);
        const newPrice = html.getElementById(id);

        if (oldPrice && newPrice) 
          oldPrice.innerHTML = newPrice.innerHTML;
        



      })
    }
  }
  customElements.define("variant-selector", VariantSelector);
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    try {
      const swiper = new Swiper('.swiper', {
        direction: 'horizontal',
        pagination: {
          el: ".swiper-pagination"
        },
        navigation: {
          prevEl: ".swiper-button-prev",
          nextEl: ".swiper-button-next"
        }
      })
    } catch (e) {
      console.log('SwiperJs is not defined');
    }
  })
</script>

{% schema %}
  {
    "name": "Product",
    "blocks": [
      {
        "type": "vendor",
        "name": "Vendor",
        "limit": 1
      },
      {
        "type": "title",
        "name": "Title",
        "limit": 1
      },
      {
        "type": "price",
        "name": "Price",
        "limit": 1
      },
      {
        "type": "variant_selector",
        "name": "Variant Selector",
        "limit": 1
      }, {
        "type": "quantity",
        "name": "Quantity",
        "limit": 1
      }, {
        "type": "description",
        "name": "Description",
        "limit": 1
      }, {
        "type": "checkout_buttons",
        "name": "Checkout Buttons",
        "limit": 1
      }
    ]
  }
{% endschema %}